<UserControl xmlns="https://github.com/avaloniaui"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:vm="clr-namespace:VideoConversionApp.ViewModels"
  xmlns:converters="clr-namespace:VideoConversionApp.Converters"
  xmlns:views="clr-namespace:VideoConversionApp.Views"
  xmlns:models="clr-namespace:VideoConversionApp.Models"
  mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
  x:DataType="vm:RenderQueueViewModel"
  x:Class="VideoConversionApp.Views.RenderQueueView"
  AttachedToVisualTree="Visual_OnAttachedToVisualTree"
  Name="RenderQueueViewElement">

  <Design.DataContext>
    <vm:RenderQueueViewModel>
      <x:Arguments>
        <x:Null></x:Null>
        <x:Null></x:Null>
        <x:Null></x:Null>
        <x:Null></x:Null>
      </x:Arguments>
    </vm:RenderQueueViewModel>
  </Design.DataContext>
  
  <UserControl.Resources>
    <converters:DecimalToTimeStringConverter x:Key="DecimalToTimeStringConverter" />
    <converters:DateTimeAsLocalFormatConverter x:Key="DateTimeAsLocalFormatConverter" />
    <converters:BytesAsDataSizeStringConverter x:Key="BytesAsDataSizeStringConverter" />
    <converters:VideoOutputFilenameConverter x:Key="VideoOutputFilenameConverter"/>
    <converters:TimelineCropAsStringConverter x:Key="TimelineCropAsStringConverter" />
    <converters:FilenameConverter x:Key="FilenameConverter" />
    <converters:EnumValueMatchConverter x:Key="EnumValueMatchConverter" />
    <converters:EnumValueNotMatchConverter x:Key="EnumValueNotMatchConverter" />
    <converters:EnumValueMatchAnyConverter x:Key="EnumValueMatchAnyConverter" />
  </UserControl.Resources>

  <UserControl.Styles>
    <Style Selector="PathIcon.compact-render-successful">
      <Setter Property="Data" Value="{StaticResource checkmark_circle_regular}"></Setter>
      <Setter Property="Foreground" Value="Chartreuse"></Setter>
    </Style>
    <Style Selector="PathIcon.compact-render-failed">
      <Setter Property="Data" Value="{StaticResource error_circle_regular}"></Setter>
      <Setter Property="Foreground" Value="Firebrick"></Setter>
    </Style>
    <Style Selector="PathIcon.compact-rendering">
      <Setter Property="Data" Value="{StaticResource caret_right_regular}"></Setter>
      <Setter Property="Foreground" Value="DeepSkyBlue"></Setter>
    </Style>    
    <Style Selector="PathIcon.compact-queued">
      <Setter Property="Data" Value="{StaticResource keyboard_shift_uppercase_regular}"></Setter>
    </Style>   
    <Style Selector="PathIcon.compact-render-canceled">
      <Setter Property="Data" Value="{StaticResource dismiss_regular}"></Setter>
      
    </Style>
  </UserControl.Styles>
  
  <DockPanel>
    <Border Classes="pane-heading" DockPanel.Dock="Top">
      <Panel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
          <Border BorderThickness="0 0 1 0" BorderBrush="Gray" VerticalAlignment="Center">
            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 0 12 0"
              FontSize="16" FontWeight="Bold">
              Render Queue
            </TextBlock>
          </Border>
          <Button Classes="basic-transparent" Command="{Binding ClearCompletedFromQueueCommand}">
            <Button.Content>
              <StackPanel Orientation="Horizontal" Margin="8 0 0 0">
                <PathIcon Data="{StaticResource checkmark_circle_regular}"></PathIcon>
                <TextBlock Margin="8">Clear completed</TextBlock>
              </StackPanel>
            </Button.Content>
          </Button>  
          <Button Classes="basic-transparent" Command="{Binding ClearRenderQueueCommand}">
            <Button.Content>
              <StackPanel Orientation="Horizontal" Margin="8 0 0 0">
                <PathIcon Data="{StaticResource delete_regular}"></PathIcon>
                <TextBlock Margin="8">Clear queue</TextBlock>
              </StackPanel>
            </Button.Content>
          </Button>  
          <ToggleButton Classes="basic-transparent" IsChecked="{Binding ShowExpandedView}">
            <StackPanel Orientation="Horizontal" Margin="8 0 0 0">
              <PathIcon Data="{StaticResource text_expand_regular}"></PathIcon>
              <TextBlock Margin="8">Show expanded</TextBlock>
            </StackPanel>
          </ToggleButton>
        </StackPanel>
      </Panel>
    </Border>
    <Border Classes="pane-body pb-lb">
      <Grid ColumnDefinitions="*" RowDefinitions="*">

        <StackPanel Orientation="Horizontal" Height="60" VerticalAlignment="Top" HorizontalAlignment="Center"
          Margin="0 60 0 0"
          IsVisible="{Binding !RenderQueue.Count}" Opacity="0.4">
          <TextBlock FontSize="24" FontWeight="Bold" VerticalAlignment="Center">Select </TextBlock>
          <PathIcon Data="{StaticResource checkbox_checked_regular}" Height="24" Width="24" 
            Margin="8 0"/>
          <TextBlock FontSize="24" FontWeight="Bold" VerticalAlignment="Center"> videos in Media tab to the queue</TextBlock>
        </StackPanel>
        <ListBox IsVisible="{Binding RenderQueue.Count}" Name="RenderQueueListBox" ItemsSource="{Binding RenderQueue}" BorderBrush="Transparent">
          <ListBox.ItemTemplate>
            <DataTemplate>
              <Grid Name="ItemRoot" ColumnDefinitions="*" MaxWidth="{Binding $parent.Bounds.Width}">
                
                <!-- MINIMIZED VIEW -->
                <Border CornerRadius="6" Margin="5" ClipToBounds="True" BorderThickness="1" BorderBrush="Black"
                  Background="#333333"
                  IsVisible="{Binding !$parent[ListBox].((vm:RenderQueueViewModel)DataContext).ShowExpandedView}">
                  <Grid ColumnDefinitions="Auto,Auto,*,Auto"  Margin="4" >
                    <!-- status icons -->
                    <Ellipse Width="22" Height="22" Fill="#AA000000" VerticalAlignment="Top" HorizontalAlignment="Left"
                      Margin="2 2 0 0" />
                    <PathIcon Classes="compact-rendering" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                      Margin="3 5 0 0" 
                      ToolTip.Tip="Rendering"
                      IsVisible="{Binding RenderingState, 
                      Converter={StaticResource EnumValueMatchConverter}, 
                      ConverterParameter={x:Static models:VideoRenderingState.Rendering}}" 
                      />
                    <PathIcon Classes="compact-queued" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                      Margin="3 5 0 0" 
                      ToolTip.Tip="Ready in queue"
                      IsVisible="{Binding RenderingState, 
                      Converter={StaticResource EnumValueMatchConverter}, 
                      ConverterParameter={x:Static models:VideoRenderingState.Queued}}"
                      />
                    <PathIcon Classes="compact-render-successful" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                      Margin="3 5 0 0"
                      ToolTip.Tip="Rendering completed successfully"
                      IsVisible="{Binding RenderingState, 
                      Converter={StaticResource EnumValueMatchConverter}, 
                      ConverterParameter={x:Static models:VideoRenderingState.CompletedSuccessfully}}"
                      />
                    <PathIcon Classes="compact-render-failed" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                      Margin="3 5 0 0" 
                      ToolTip.Tip="Rendering failed with errors"
                      IsVisible="{Binding RenderingState, 
                      Converter={StaticResource EnumValueMatchConverter}, 
                      ConverterParameter={x:Static models:VideoRenderingState.CompletedWithErrors}}"
                      />
                    <PathIcon Classes="compact-render-canceled" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                      Margin="3 5 0 0" 
                      ToolTip.Tip="Canceled"
                      IsVisible="{Binding RenderingState, 
                      Converter={StaticResource EnumValueMatchConverter}, 
                      ConverterParameter={x:Static models:VideoRenderingState.Canceled}}"
                    />
                    <TextBlock Grid.Column="1" Margin="0 0 8 0" Width="125" VerticalAlignment="Center" 
                      TextAlignment="Center" Text="{Binding Video.InputVideoInfo.Filename, Converter={StaticResource FilenameConverter}, ConverterParameter='GetFileName'}" />
                    <Border Grid.Column="2" CornerRadius="20" ClipToBounds="True" Margin="0 0 6 0">
                      <ProgressBar Value="{Binding Progress}" CornerRadius="0" Height="16" ShowProgressText="True"
                        IsVisible="{Binding Progress}"/>
                    </Border>
                    <StackPanel Grid.Column="3" Orientation="Horizontal">
                      <StackPanel.Styles>
                        <Style Selector="Button">
                          <Setter Property="CornerRadius" Value="2"></Setter>
                          <Setter Property="Margin" Value="4"></Setter>
                          <Setter Property="BorderThickness" Value="0"></Setter>
                          <Setter Property="Height" Value="16"></Setter>
                          <Setter Property="Width" Value="16"></Setter>
                        </Style>
                        <Style Selector="Button:pointerover">
                          <Setter Property="Background" Value="#666666"></Setter>
                        </Style>
                        <Style Selector="Button PathIcon">
                          <Setter Property="Height" Value="10"></Setter>
                        </Style>
                      </StackPanel.Styles>
                      <Button 
                        Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).RetryRenderingQueueEntryCommand}"
                        CommandParameter="{Binding}"
                        ToolTip.Tip="Retry rendering">
                        <Button.IsVisible>
                          <MultiBinding Converter="{StaticResource EnumValueMatchAnyConverter}">
                            <Binding Path="RenderingState" />
                            <Binding Source="{x:Static models:VideoRenderingState.CompletedWithErrors}" />
                            <Binding Source="{x:Static models:VideoRenderingState.Canceled}" />
                          </MultiBinding>
                        </Button.IsVisible>
                        <PathIcon Data="{StaticResource arrow_redo_regular}"></PathIcon>
                      </Button>
                      <Button 
                        IsVisible="{Binding RenderingState, 
                        Converter={StaticResource EnumValueMatchConverter}, 
                        ConverterParameter={x:Static models:VideoRenderingState.Rendering}}"
                        Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).RetryRenderingQueueEntryCommand}"
                        CommandParameter="{Binding}"
                        ToolTip.Tip="Stop/cancel rendering">
                        <PathIcon Data="{StaticResource stop_regular}"></PathIcon></Button>
                      <Button
                        IsVisible="{Binding !$parent[ListBox].((vm:RenderQueueViewModel)DataContext).IsRenderingInProgress}"
                        Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).RemoveQueueEntryCommand}"
                        CommandParameter="{Binding}"
                        ToolTip.Tip="Remove from queue" FontSize="8">
                        <PathIcon Data="{StaticResource dismiss_regular}"></PathIcon>
                      </Button>
                      <Button
                        IsVisible="{Binding !$parent[ListBox].((vm:RenderQueueViewModel)DataContext).IsRenderingInProgress}"
                        Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).MoveUpQueueEntryCommand}"
                        CommandParameter="{Binding}"
                        ToolTip.Tip="Move up in queue">
                        <PathIcon Data="{StaticResource arrow_up_regular}"></PathIcon>
                      </Button>
                      <Button
                        IsVisible="{Binding !$parent[ListBox].((vm:RenderQueueViewModel)DataContext).IsRenderingInProgress}"
                        Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).MoveDownQueueEntryCommand}"
                        CommandParameter="{Binding}"
                        ToolTip.Tip="Move down in queue">
                        <PathIcon Data="{StaticResource arrow_down_regular}"></PathIcon>
                      </Button>
                    </StackPanel>
                  </Grid>
                </Border>
                
                <!-- FULL EXPANDED VIEW -->
                <Border CornerRadius="6" Margin="10" ClipToBounds="True" BorderThickness="1" BorderBrush="Black"
                  Background="#333333" IsVisible="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).ShowExpandedView}">
                  <StackPanel Orientation="Vertical" Margin="8">
                    <Grid RowDefinitions="*" ColumnDefinitions="Auto,Auto,*,Auto" Height="96">
                      <Border Grid.Column="0" Grid.Row="0" CornerRadius="7" ClipToBounds="True" BorderBrush="Black"
                        BorderThickness="1">
                        <Border CornerRadius="7" ClipToBounds="True">
                          <Panel>
                            <Image Source="{Binding Thumbnail}" Stretch="UniformToFill"
                              RenderOptions.BitmapInterpolationMode="MediumQuality" />
                            <Ellipse Width="22" Height="22" Fill="#AA000000" VerticalAlignment="Top" HorizontalAlignment="Left"
                              Margin="2 2 0 0" />
                            <PathIcon Classes="compact-rendering" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                              Margin="3 5 0 0" 
                              ToolTip.Tip="Rendering"
                              IsVisible="{Binding RenderingState, 
                              Converter={StaticResource EnumValueMatchConverter}, 
                              ConverterParameter={x:Static models:VideoRenderingState.Rendering}}" 
                              />
                            <PathIcon Classes="compact-queued" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                              Margin="3 5 0 0" 
                              ToolTip.Tip="Ready in queue"
                              IsVisible="{Binding RenderingState, 
                              Converter={StaticResource EnumValueMatchConverter}, 
                              ConverterParameter={x:Static models:VideoRenderingState.Queued}}"
                              />
                            <PathIcon Classes="compact-render-successful" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                              Margin="3 5 0 0"
                              ToolTip.Tip="Rendering completed successfully"
                              IsVisible="{Binding RenderingState, 
                              Converter={StaticResource EnumValueMatchConverter}, 
                              ConverterParameter={x:Static models:VideoRenderingState.CompletedSuccessfully}}"
                              />
                            <PathIcon Classes="compact-render-failed" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                              Margin="3 5 0 0" 
                              ToolTip.Tip="Rendering failed with errors"
                              IsVisible="{Binding RenderingState, 
                              Converter={StaticResource EnumValueMatchConverter}, 
                              ConverterParameter={x:Static models:VideoRenderingState.CompletedWithErrors}}"
                              />
                            <PathIcon Classes="compact-render-canceled" Height="16" VerticalAlignment="Top" HorizontalAlignment="Left"
                              Margin="3 5 0 0" 
                              ToolTip.Tip="Canceled"
                              IsVisible="{Binding RenderingState, 
                              Converter={StaticResource EnumValueMatchConverter}, 
                              ConverterParameter={x:Static models:VideoRenderingState.Canceled}}"
                            />
                          </Panel>
                        </Border>
                      </Border>

                      <Grid Grid.Column="1" RowDefinitions="2*,3*,3*,*,3*,3*,2*" Margin="10 0 0 0">
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Video.InputVideoInfo.Filename, Converter={StaticResource FilenameConverter}, ConverterParameter='ShortenedPath'}"
                          ToolTip.Tip="{Binding Video.InputVideoInfo.Filename}"
                          TextTrimming="CharacterEllipsis" FontWeight="Bold"
                          Margin="0,0,6,0" HorizontalAlignment="Left" />
                        <TextBlock Grid.Column="0" Grid.Row="2" 
                          Text="{Binding Video.InputVideoInfo.DurationInSeconds, Converter={StaticResource DecimalToTimeStringConverter}}" 
                          TextTrimming="CharacterEllipsis"
                          Margin="0,0,6,0" HorizontalAlignment="Left" />
                        <TextBlock Grid.Column="0" Grid.Row="4" 
                          Text="{Binding Video.InputVideoInfo.CreatedDateTime, Converter={StaticResource DateTimeAsLocalFormatConverter}}"
                          TextTrimming="CharacterEllipsis"
                          Margin="0,0,6,0" HorizontalAlignment="Left" />
                        <TextBlock Grid.Column="0" Grid.Row="5" Text="{Binding Video.InputVideoInfo.SizeBytes, Converter={StaticResource BytesAsDataSizeStringConverter}}"
                          TextTrimming="CharacterEllipsis"
                          Margin="0,0,6,0" HorizontalAlignment="Left" />
                      </Grid>
                      
                      <Border Grid.Column="2" BorderBrush="#444444" BorderThickness="2 0 2 0" Margin="20 0 20 0">
                        <Grid RowDefinitions="2*,3*,3*,*,3*,3*,3*,2*" ColumnDefinitions="Auto, *" Margin="10 0 0 0">
                          <Grid.Styles>
                            <Style Selector="TextBlock">
                              <Setter Property="Margin" Value="1 0 8 1"></Setter>
                            </Style>
                          </Grid.Styles>
                          <TextBlock Grid.Column="0" Grid.Row="1">Output as:</TextBlock>
                          <TextBlock Grid.Column="1" Grid.Row="1">
                            <TextBlock.Text>
                              <MultiBinding Converter="{StaticResource VideoOutputFilenameConverter}">
                                <Binding Path="Video" />
                                <Binding Path="$parent[ListBox].((vm:RenderQueueViewModel)DataContext).ConverterService" />
                                <Binding Path="$parent[ListBox].((vm:RenderQueueViewModel)DataContext).NamingPattern"></Binding>
                              </MultiBinding>
                            </TextBlock.Text>
                          </TextBlock>
                          <TextBlock Grid.Column="0" Grid.Row="2">Output to:</TextBlock>
                          <TextBlock Grid.Column="1" Grid.Row="2" 
                            Text="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).OutputDirectory}"
                            IsVisible="{Binding !$parent[ListBox].((vm:RenderQueueViewModel)DataContext).OutputBesideOriginals}"
                            TextTrimming="CharacterEllipsis"
                            ToolTip.Tip="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).OutputDirectory}"
                            />
                          <TextBlock Grid.Column="1" Grid.Row="2" 
                            Text="{Binding Video.InputVideoInfo.Filename, Converter={StaticResource FilenameConverter}, ConverterParameter='GetDirectoryName'}"
                            IsVisible="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).OutputBesideOriginals}"
                            TextTrimming="CharacterEllipsis"
                            ToolTip.Tip="{Binding Video.InputVideoInfo.Filename, Converter={StaticResource FilenameConverter}, ConverterParameter='GetDirectoryName'}"
                            />
                          <TextBlock Grid.Column="0" Grid.Row="4">Orientation:</TextBlock>
                          <TextBlock Grid.Column="1" Grid.Row="4" Text="{Binding Video.FrameRotation}"></TextBlock>
                          <TextBlock Grid.Column="0" Grid.Row="5">Crop:</TextBlock>
                          <TextBlock Grid.Column="1" Grid.Row="5" 
                            Text="{Binding Video,
                            Converter={StaticResource TimelineCropAsStringConverter}, ConverterParameter=false}"></TextBlock>
                          <TextBlock Grid.Column="0" Grid.Row="6">Cropped duration:</TextBlock>
                          <TextBlock Grid.Column="1" Grid.Row="6" 
                            Text="{Binding Video,
                            Converter={StaticResource TimelineCropAsStringConverter}, ConverterParameter=true}"></TextBlock>
                        </Grid>
                      </Border>
                      
                      <StackPanel Grid.Column="3" Orientation="Horizontal">
                        <StackPanel.Styles>
                          <Style Selector="Button">
                            <Setter Property="CornerRadius" Value="6"></Setter>
                            <Setter Property="Margin" Value="4"></Setter>
                            <Setter Property="BorderThickness" Value="0"></Setter>
                            <Setter Property="Height" Value="32"></Setter>
                            <Setter Property="Width" Value="32"></Setter>
                          </Style>
                          <Style Selector="Button:pointerover">
                            <Setter Property="Background" Value="#666666"></Setter>
                          </Style>
                          <Style Selector="Button PathIcon">
                            <Setter Property="Height" Value="16"></Setter>
                            <Setter Property="Width" Value="16"></Setter>
                          </Style>
                        </StackPanel.Styles>
                        <Button
                          ToolTip.Tip="Retry rendering"
                          Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).RetryRenderingQueueEntryCommand}"
                          CommandParameter="{Binding}">
                          <Button.IsVisible>
                            <MultiBinding Converter="{StaticResource EnumValueMatchAnyConverter}">
                              <Binding Path="RenderingState" />
                              <Binding Source="{x:Static models:VideoRenderingState.CompletedWithErrors}" />
                              <Binding Source="{x:Static models:VideoRenderingState.Canceled}" />
                            </MultiBinding>
                          </Button.IsVisible>
                          <PathIcon Data="{StaticResource arrow_redo_regular}"></PathIcon>
                        </Button>
                        <Button
                          ToolTip.Tip="Stop/cancel rendering"
                          IsVisible="{Binding RenderingState, 
                          Converter={StaticResource EnumValueMatchConverter}, 
                          ConverterParameter={x:Static models:VideoRenderingState.Rendering}}"
                          Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).CancelRenderingQueueEntryCommand}"
                          CommandParameter="{Binding}">
                          <PathIcon Data="{StaticResource stop_regular}"></PathIcon></Button>
                        <Button
                          IsVisible="{Binding !$parent[ListBox].((vm:RenderQueueViewModel)DataContext).IsRenderingInProgress}"
                          Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).RemoveQueueEntryCommand}"
                          CommandParameter="{Binding}"
                          ToolTip.Tip="Remove from queue">
                          <PathIcon Data="{StaticResource dismiss_regular}"></PathIcon>
                        </Button>
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center"
                          IsVisible="{Binding !$parent[ListBox].((vm:RenderQueueViewModel)DataContext).IsRenderingInProgress}"  
                          >
                          <Button
                            Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).MoveUpQueueEntryCommand}"
                            CommandParameter="{Binding}"
                            ToolTip.Tip="Move up in queue">
                            <PathIcon Data="{StaticResource arrow_up_regular}"></PathIcon>
                          </Button>
                          <Button
                            Command="{Binding $parent[ListBox].((vm:RenderQueueViewModel)DataContext).MoveDownQueueEntryCommand}"
                            CommandParameter="{Binding}"
                            ToolTip.Tip="Move down in queue">
                            <PathIcon Data="{StaticResource arrow_down_regular}"></PathIcon>
                          </Button>
                        </StackPanel>
                      </StackPanel>

                    </Grid>
                    <Border CornerRadius="6" ClipToBounds="True" Margin="0 10 0 0">
                      <ProgressBar Height="20" Value="{Binding Progress}" ShowProgressText="True"
                        IsVisible="{Binding Progress}"></ProgressBar>
                    </Border>
                    <Panel Name="ErrorHolderPanel" Margin="0 10 0 0" Width="{Binding $parent.Bounds.Width}"
                      IsVisible="false">
                      <Border Padding="10" Background="rgba(255,20,0,200)" CornerRadius="6" 
                        BorderThickness="2 0 2 0" BorderBrush="Red">
                        <Panel ClipToBounds="True">
                          <TextBlock TextWrapping="WrapWithOverflow" MaxWidth="{Binding #ErrorHolderPanel.Bounds.Width}" 
                            ClipToBounds="True" 
                            Text="Warning CS8604 : Possible null reference argument for parameter 'item' in 'int IListIImage.IndexOf(IImage item)' Warning CS8604 : Possible null reference argument for parameter 'item' in 'int IListIImage.IndexOf(IImage item)' Warning CS8604 : Possible null reference argument for parameter 'item' in 'int IListIImage.IndexOf(IImage item)'"></TextBlock>
                        </Panel>
                      </Border>
                    </Panel>
                  </StackPanel>

                </Border>
              </Grid>
            </DataTemplate>
          </ListBox.ItemTemplate>
        </ListBox>
      </Grid>
    </Border>
  </DockPanel>

</UserControl>